// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Track {
  id                Int        @id @default(autoincrement())

  created_at        DateTime   @default(now())
  updated_at        DateTime   @default(now())

  title             String     @db.VarChar(60)
  track_type        TrackType  @default(ORIGINAL)
  album_id          Int?
  release_date      DateTime?
  image             String?    
  url               String     
  host              Host       
  
  artists           Artist[]   @relation("artist")
  remix_artists     Artist[]   @relation("remix_artist")
  album             Album?     @relation(references: [id], fields: [album_id])
  genres            Genre[]      
}

model Mix {
  id           Int        @id @default(autoincrement())

  title        String     @db.VarChar(100) @unique
  artist_id    Int
  host         Host       @default(SOUNDCLOUD)
  image        String?    
  url          String 

  artist       Artist     @relation(references: [id], fields: [artist_id])
}

model Artist {
  id         Int         @id @default(autoincrement())
  name       String      @db.VarChar(50) @unique

  tracks     Track[]     @relation("artist")  
  remixes    Track[]     @relation("remix_artist") 
  mixes      Mix[]
  albums     Album[]
}

model Album {
  id           Int       @id @default(autoincrement())

  title        String    @db.VarChar(50)
  host         Host      @default(BANDCAMP)
  image        String?    
  url          String 
  artist_id    Int

  tracks       Track[]
  artist       Artist     @relation(references: [id], fields: [artist_id])
}

model Genre {
  id       Int      @id @default(autoincrement())
  name     String   @db.VarChar(30) @unique

  tracks   Track[]
}

enum Host {
  YOUTUBE
  BANDCAMP
  SOUNDCLOUD
  OTHER
}

enum TrackType {
  ORIGINAL
  REMIX
  EDIT
  CLUB_MIX
  RADIO_EDIT
  BOOTLEG
}