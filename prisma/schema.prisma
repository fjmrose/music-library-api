// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Track {
  id                Int        @id @default(autoincrement())

  created_at        DateTime   @default(now())
  updated_at        DateTime   @default(now())

  title             String     @db.VarChar(60)
  album_id          Int?
  release_date      DateTime?
  image             String?    
  url               String     
  host              Host       
  
  artists           Artist[]   @relation("artist")
  remix_artists     Artist[]   @relation("remix_artist")
  album             Album?     @relation(references: [id], fields: [album_id])
  genres            Genre[]      
}

model Mix {
  id           Int        @id @default(autoincrement())

  title        String     @db.VarChar(100)
  artist_id    Int
  host         Host

  artist       Artist     @relation(references: [id], fields: [artist_id])
}

model Artist {
  id         Int         @id @default(autoincrement())
  name       String      @db.VarChar(50)

  tracks     Track[]     @relation("artist")  
  remixes    Track[]     @relation("remix_artist") 
  mixes      Mix[]
}

model Album {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(50)

  tracks    Track[]
}

model Genre {
  id       Int      @id @default(autoincrement())
  name     String   @db.VarChar(30)

  tracks   Track[]
}

enum Host {
  YOUTUBE
  BANDCAMP
  SOUNDCLOUD
  OTHER
}


model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  firstName String?
  lastName  String?
  email     String    @unique
  role      String    @default("user")
  picture   String?
  reporter  Absence[] @relation("reporter")
  requester Absence[] @relation("user")
}

model Absence {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  approved   Boolean  @default(false)
  user       User     @relation("user", fields: [userId], references: [id])
  userId     Int
  reporter   User     @relation("reporter", fields: [reporterId], references: [id])
  reporterId Int
  from       DateTime
  to         DateTime
  notes      String?
}